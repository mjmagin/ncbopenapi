{
  "openapi": "3.1.0",
  "info": {
    "title": "Blocklet - Open Weather Map (OneCall) v3.0",
    "summary": "Proxy API - Open Weather Map OneCall v3.0",
    "termsOfService": "terms of service description",
    "description": "<img src='https://res.cloudinary.com/duue2nnrs/image/upload/v1708079989/blocletlogo_lrgtl8.png' width='50' height='50'/> <p>Get essential weather data, short-term and long-term forecasts and aggregated weather data is easy with the OpenWeather One Call API v2.5.</p><h2>Key Benefits</h2><ul><li>Secured API key in our encrypted database</li><li>Optimise&nbsp;performance with our caching technology (300s TTL) - can be overridden as required&nbsp;</li><li>Minimise 3rd Party API costs / limits&nbsp;</li><li>Collaborate with the developers by sharing this page or use the openapi spec link above and import into postman&nbsp;</li><li>Import the openapi spec link above into popular nocode platforms such as FlutterFlow, PowerApps &nbsp;</li></ul>",
    "version": "2.5"
  },
  "x-blocklet-description": "",
  "externalDocs": {
    "description": "Openweathermap Documentation",
    "url": "https://openweathermap.org/api/one-call-3"
  },
  "servers": [
    {
      "url": "https://api.openweathermap.org/data/3.0"
    }
  ],
  "security": [
    {
      "blocApiKey": []
    }
  ],
  "paths": {
    "/onecall": {
      "get": {
        "tags": [
          "Weather"
        ],
        "name": "Get Weather Data",
        "summary": "To get access to current weather, minute forecast for 1 hour, hourly forecast for 48 hours, daily forecast for 8 days and government weather alerts",
        "description": "Current and forecasts weather data",
        "parameters": [
          {
            "name": "Cache-Control",
            "in": "header",
            "summary": "Cache Control",
            "description": "Send a value of 'max-age=0' to ignore the cache and retrieve data from the service",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-collection-key",
            "in": "header",
            "summary": "Bloclet Collection API Key",
            "description": "Additional Collection Specific API Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "summary": "Authorization Header",
            "description": "Authorization Header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lon",
            "in": "query",
            "summary": "Latitude",
            "description": "Latitude, decimal (-90; 90). If you need the geocoder to automatic convert city names and zip-codes to geo coordinates and the other way around, use one of our Geocoding Blocks",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "summary": "Longitude",
            "description": "Longitude, decimal (-180; 180). If you need the geocoder to automatic convert city names and zip-codes to geo coordinates and the other way around, use one of our Geocoding Blocks",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exclude",
            "in": "query",
            "summary": "Exclude",
            "description": "By using this parameter you can exclude some parts of the weather data from the API response. It should be a comma-delimited list (without spaces). Available values: current, minutely, hourly, daily, alerts",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "units",
            "in": "query",
            "summary": "Units",
            "description": "Units of measurement. standard, metric and imperial units are available. If you do not use the units parameter, standard units will be applied by default.",
            "schema": {
              "type": "string",
              "enum": [
                "standard",
                "metric",
                "imperial"
              ]
            }
          },
          {
            "name": "lang",
            "summary": "Language",
            "in": "query",
            "description": "You can use the lang parameter to get the output in your language. See documentation for ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "error",
            "content": {}
          },
          "403": {
            "description": "Unauthorised",
            "content": {}
          },
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "number"
                    },
                    "lon": {
                      "type": "number"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "current": {
                      "type": "object",
                      "properties": {
                        "dt": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "sunrise": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "sunset": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "temp": {
                          "type": "number"
                        },
                        "feels_like": {
                          "type": "number"
                        },
                        "pressure": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "humidity": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "dew_point": {
                          "type": "number"
                        },
                        "uvi": {
                          "type": "number"
                        },
                        "clouds": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "wind_speed": {
                          "type": "number"
                        },
                        "wind_deg": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "weather": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "main": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "icon": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "hourly": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dt": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "temp": {
                            "type": "number"
                          },
                          "feels_like": {
                            "type": "number"
                          },
                          "pressure": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "humidity": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "dew_point": {
                            "type": "number"
                          },
                          "clouds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "wind_speed": {
                            "type": "number"
                          },
                          "wind_deg": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "weather": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "main": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "icon": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "daily": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dt": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "sunrise": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "sunset": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "temp": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "type": "number"
                              },
                              "min": {
                                "type": "number"
                              },
                              "max": {
                                "type": "number"
                              },
                              "night": {
                                "type": "number"
                              },
                              "eve": {
                                "type": "number"
                              },
                              "morn": {
                                "type": "number"
                              }
                            }
                          },
                          "feels_like": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "type": "number"
                              },
                              "night": {
                                "type": "number"
                              },
                              "eve": {
                                "type": "number"
                              },
                              "morn": {
                                "type": "number"
                              }
                            }
                          },
                          "pressure": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "humidity": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "dew_point": {
                            "type": "number"
                          },
                          "wind_speed": {
                            "type": "number"
                          },
                          "wind_deg": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "weather": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "main": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "icon": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "clouds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "uvi": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "blocApiKey": {
        "type": "apiKey",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}