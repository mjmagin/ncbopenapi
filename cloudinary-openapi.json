{
    "openapi": "3.1.0",
    "info": {
        "title": "Cloudinary Upload API",
        "summary": "Cloudinary Upload API",
        "termsOfService": "terms of service description",
        "description": "Cloudinary Upload API https://cloudinary.com/documentation/upload_images#uploading_with_a_direct_call_to_the_rest_api ",
        "version": "1.0"
    },
    "x-blocklet-description": "In order to use this Bloc you will need the following;<br /><br />1. An Account with Cloudinary.<br />2. The Cloud Name<br/><br />3. The API Key<br/><br />4. The API Secret<br/><br />",
    "externalDocs": {
        "description": "Cloudinary Documentation",
        "url": "https://cloudinary.com/documentation/upload_images#uploading_with_a_direct_call_to_the_rest_api "
    },
    "servers": [
        {
            "url": "https://api.cloudinary.com/v1_1"
        }
    ],
    "security": [
        {
            "accountApiKey": []
        },
        {
            "collectionApiKey": []
        },
        {
            "AuthorizationToken": []
        }
    ],
    "paths": {
        "/{resourcetype}/destroy": {
            "post": {
                "summary": "delete file",
                "description": "delete file",
                "parameters": [
                    {
                        "name": "resourcetype",
                        "in": "path",
                        "description": "eg image or video or raw or auto",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "image",
                                "video",
                                "raw",
                                "auto"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "public_id": {
                                        "type": "string",
                                        "description": "your public id for image"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    },
                    "default": {
                        "description": "error",
                        "content": {}
                    }
                }
            }
        },
        "/{resourcetype}/upload": {
            "post": {
                "summary": "resource upload and transformation (limit circa 4.5MB)",
                "description": "resource upload and transformation (limit circa 4.5MB)",
                "parameters": [
                    {
                        "name": "resourcetype",
                        "in": "path",
                        "description": "eg image or video or raw or auto",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "image",
                                "video",
                                "raw",
                                "auto"
                            ]
                        },
                        "default": "auto"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "The file to upload. Can be the actual data (byte array buffer), the Data URI (Base64 encoded), a remote FTP, HTTP or HTTPS URL of an existing file, or a private storage bucket (S3 or Google Storage) URL of a whitelisted bucket."
                                    },
                                    "public_id": {
                                        "type": "string",
                                        "description": "The identifier that's used for accessing and delivering the uploaded asset. If not specified, then the public ID of the asset will either be comprised of random characters or will use the original file's filename, depending whether use_filename was set to true."
                                    },
                                    "folder": {
                                        "type": "string",
                                        "description": "Defines both the full path of the folder where the uploaded asset will be placed and also a path value that's prepended to public_id value with a forward slash."
                                    },
                                    "eager": {
                                        "type": "string",
                                        "description": "A list of transformations to create for the uploaded asset, instead of lazily creating them when first accessed by your site's visitors (see the Transformation URL API Reference for more details on possible values). This option accepts either a single transformation or a pipe-separated list of transformations to create for the uploaded asset."
                                    },
                                    "transformation": {
                                        "type": "object",
                                        "description": "An incoming transformation to run on the uploaded asset before saving it in the cloud. This parameter is given as a string of comma-separated single characters (separated with a slash for chained transformations).SDKs: Supports a hash of transformation parameters (or an array of hashes for chained transformations).",
                                        "properties": {
                                            "width": {
                                                "type": "number",
                                                "description": "The width of the transformed image. If the value is set to auto, the width of the transformed image will be calculated based on the original image's aspect ratio."
                                            },
                                            "height": {
                                                "type": "number",
                                                "description": "The height of the transformed image. If the value is set to auto, the height of the transformed image will be calculated based on the original image's aspect ratio."
                                            },
                                            "crop": {
                                                "type": "string",
                                                "description": "The cropping mode to use when resizing the image. The default value is fit. The following crop modes are supported: fit, limit, pad, scale, crop, thumb, fill, mfit, mpad, mfill, mthumb, lfill, lpad, lthumb, limit_faces, limit_illustration, limit_concepts, facearea, min, max, and auto."
                                            },
                                            "gravity": {
                                                "type": "string",
                                                "description": "The gravity to use when cropping the image. The default value is auto. The following gravity modes are supported: auto, north, northeast, southeast, south, southwest, west, northwest, and center."
                                            }
                                        }
                                    },
                                    "use_filename": {
                                        "type": "boolean",
                                        "description": "Whether to use the original file name of the uploaded file as the public_id. Relevant only if the public_id parameter isn't set. When false and the public_id parameter is also not defined, the public ID will be comprised of random characters."
                                    },
                                    "unique_filename": {
                                        "type": "boolean",
                                        "description": "When set to false, does not add random characters at the end of the filename that guarantee its uniqueness. Note that if the overwrite parameter is also false, the public ID will be comprised of random characters. This parameter is relevant only if use_filename is also set to true. Default: true."
                                    },
                                    "overwrite": {
                                        "type": "boolean",
                                        "description": "Whether to overwrite existing assets with the same public ID. When set to false, a response is returned immediately if an asset with the same public ID was found."
                                    },
                                    "format": {
                                        "type": "string",
                                        "description": "An optional format to convert the uploaded asset to before saving in the cloud. For example: jpg."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "asset_id": {
                                            "type": "string"
                                        },
                                        "public_id": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "number"
                                        },
                                        "version_id": {
                                            "type": "string"
                                        },
                                        "signature": {
                                            "type": "string"
                                        },
                                        "width": {
                                            "type": "number"
                                        },
                                        "height": {
                                            "type": "number"
                                        },
                                        "resource_type": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "etag": {
                                            "type": "string"
                                        },
                                        "placeholder": {
                                            "type": "boolean"
                                        },
                                        "url": {
                                            "type": "string"
                                        },
                                        "secure_url": {
                                            "type": "string"
                                        },
                                        "folder": {
                                            "type": "string"
                                        },
                                        "original_filename": {
                                            "type": "string"
                                        },
                                        "original_extension": {
                                            "type": "string"
                                        },
                                        "api_key": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "accountApiKey": {
                "type": "apiKey",
                "name": "x-api-key",
                "description": "(Required) Blocklet Account API Key",
                "in": "header",
                "required": true
            },
            "collectionApiKey": {
                "type": "apiKey",
                "name": "x-collection-key",
                "description": "(Optional) Only Required if Collection Account API Key has been configured",
                "in": "header",
                "required": false
            },
            "AuthorizationToken": {
                "type": "http",
                "scheme": "bearer",
                "description": "(Optional) Only Required if authorising with an Bloclet Auth Bloc has been configured",
                "required": false
            }
        }
    },
    "x-original-swagger-version": "2.0"
}